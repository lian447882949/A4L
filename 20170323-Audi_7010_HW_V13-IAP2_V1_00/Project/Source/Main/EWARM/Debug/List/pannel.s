///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM    22/Jun/2016  13:18:45 /
// Copyright 1999-2011 IAR Systems AB.                                        /
//                                                                            /
//    Cpu mode     =  thumb                                                   /
//    Endian       =  little                                                  /
//    Source file  =  F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\TW8836\pannel.c                    /
//    Command line =  F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\TW8836\pannel.c -D                 /
//                    USE_STDPERIPH_DRIVER -D USE_STM32100B_EVAL -D           /
//                    STM32F10X_CL -lc F:\软件工程\平台正式代码001\Benze_Main /
//                    Board\baoma_36\benci_newC_V45\Project\STM32F10x_StdPeri /
//                    ph_Template\EWARM\Debug\List\ -lA                       /
//                    F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\STM32F10x_StdPeriph_Template\EWARM /
//                    \Debug\List\ -o F:\软件工程\平台正式代码001\Benze_MainB /
//                    oard\baoma_36\benci_newC_V45\Project\STM32F10x_StdPerip /
//                    h_Template\EWARM\Debug\Obj\ --no_cse --no_unroll        /
//                    --no_inline --no_code_motion --no_tbaa --no_clustering  /
//                    --no_scheduling --debug --endian=little                 /
//                    --cpu=Cortex-M3 -e --fpu=None --dlib_config             /
//                    "C:\Program Files\IAR Systems\Embedded Workbench        /
//                    6.0_2\arm\INC\c\DLib_Config_Full.h" -I                  /
//                    F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\STM32F10x_StdPeriph_Template\EWARM /
//                    \ -I F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_ /
//                    36\benci_newC_V45\Project\STM32F10x_StdPeriph_Template\ /
//                    EWARM\..\ -I F:\软件工程\平台正式代码001\Benze_MainBoar /
//                    d\baoma_36\benci_newC_V45\Project\STM32F10x_StdPeriph_T /
//                    emplate\EWARM\..\..\..\Libraries\STM32F10x_StdPeriph_Dr /
//                    iver\inc\ -I F:\软件工程\平台正式代码001\Benze_MainBoar /
//                    d\baoma_36\benci_newC_V45\Project\STM32F10x_StdPeriph_T /
//                    emplate\EWARM\..\..\..\Libraries\STM32F10x_StdPeriph_Dr /
//                    iver\src\ -I F:\软件工程\平台正式代码001\Benze_MainBoar /
//                    d\baoma_36\benci_newC_V45\Project\STM32F10x_StdPeriph_T /
//                    emplate\EWARM\..\..\..\Project/Common\ -I               /
//                    F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\STM32F10x_StdPeriph_Template\EWARM /
//                    \..\..\..\Project/TW8836\ -I                            /
//                    F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\STM32F10x_StdPeriph_Template\EWARM /
//                    \..\..\..\Project/CAN\ -I F:\软件工程\平台正式代码001\B /
//                    enze_MainBoard\baoma_36\benci_newC_V45\Project\STM32F10 /
//                    x_StdPeriph_Template\EWARM\..\..\..\Project/FM\ -I      /
//                    F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\STM32F10x_StdPeriph_Template\EWARM /
//                    \..\..\..\Project/ARM\ -I F:\软件工程\平台正式代码001\B /
//                    enze_MainBoard\baoma_36\benci_newC_V45\Project\STM32F10 /
//                    x_StdPeriph_Template\EWARM\..\..\..\Libraries\CMSIS\CM3 /
//                    \DeviceSupport\ST\STM32F10x\ -On -I "C:\Program         /
//                    Files\IAR Systems\Embedded Workbench                    /
//                    6.0_2\arm\CMSIS\Include\"                               /
//    List file    =  F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\be /
//                    nci_newC_V45\Project\STM32F10x_StdPeriph_Template\EWARM /
//                    \Debug\List\pannel.s                                    /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME pannel

        RTMODEL "__SystemLibrary", "DLib"
        AAPCS BASE,INTERWORK
        PRESERVE8
        REQUIRE8

        #define SHT_PROGBITS 0x1

        EXTERN BackLight
        EXTERN EEPROM_DATA
        EXTERN ReadTW88
        EXTERN ReadTW88_Page
        EXTERN WriteTW88

        PUBLIC Clear_all_PIP
        PUBLIC DownLoadGamma
        PUBLIC Pannel_include
        PUBLIC SetAutoDetectStd
        PUBLIC Set_PIP_Position
        PUBLIC Set_PIP_Window
        PUBLIC Set_PIP_Zoom
        PUBLIC WritePannelData
        PUBLIC WritePannelData_Func
        
          CFI Names cfiNames0
          CFI StackFrame CFA R13 DATA
          CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
          CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, R13:32, R14:32
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 4
          CFI ReturnAddress R14 CODE
          CFI CFA R13+0
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 Undefined
          CFI R14 SameValue
          CFI EndCommon cfiCommon0
        
// F:\软件工程\平台正式代码001\Benze_MainBoard\baoma_36\benci_newC_V45\Project\TW8836\pannel.c
//    1 #define _PANNEL_C_
//    2 
//    3 #include "compile.h"
//    4 #include "pannel.h"
//    5 #include "pannel_includ.h"

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tw8836_Poweron_9inch[20]
tw8836_Poweron_9inch:
        DATA
        DC8 255, 9, 135, 0, 136, 64, 137, 0, 138, 64, 139, 32, 140, 255, 141, 0
        DC8 142, 2, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tw8836_poweroff_9inch[20]
tw8836_poweroff_9inch:
        DATA
        DC8 255, 9, 135, 0, 136, 64, 137, 0, 138, 64, 139, 32, 140, 0, 141, 0
        DC8 142, 2, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const TW8836_SWRST_9inch[14]
TW8836_SWRST_9inch:
        DATA
        DC8 255, 0, 224, 255, 255, 6, 99, 128, 255, 7, 3, 1, 255, 255, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_tw8836_9inch[440]
tInit_tw8836_9inch:
        DATA
        DC8 255, 0, 2, 203, 3, 255, 4, 0, 6, 6, 7, 2, 8, 128, 15, 0, 31, 0, 64
        DC8 1, 65, 17, 66, 21, 67, 4, 68, 224, 69, 9, 70, 0, 71, 0, 72, 0, 75
        DC8 0, 80, 14, 81, 0, 82, 0, 83, 5, 84, 0, 86, 0, 87, 0, 95, 0, 96, 0
        DC8 102, 0, 103, 0, 104, 0, 105, 2, 106, 32, 107, 240, 108, 32, 109
        DC8 208, 110, 16, 111, 16, 212, 0, 231, 22, 232, 2, 233, 0, 234, 0, 235
        DC8 64, 236, 48, 237, 33, 246, 0, 247, 22, 248, 1, 249, 0, 250, 0, 251
        DC8 64, 252, 48, 253, 49, 255, 1, 1, 147, 2, 78, 4, 0, 5, 0, 6, 0, 7, 2
        DC8 8, 21, 9, 240, 10, 15, 11, 208, 12, 204, 13, 0, 16, 128, 17, 92, 18
        DC8 17, 19, 128, 20, 128, 21, 0, 23, 128, 24, 68, 26, 16, 27, 0, 28, 39
        DC8 29, 127, 30, 0, 31, 0, 32, 80, 33, 18, 34, 240, 35, 216, 36, 188
        DC8 37, 184, 38, 68, 39, 56, 40, 0, 41, 0, 42, 120, 43, 68, 44, 48, 45
        DC8 20, 46, 165, 47, 230, 48, 208, 49, 0, 50, 0, 51, 69, 52, 26, 53, 0
        DC8 54, 227, 55, 40, 56, 175, 64, 0, 65, 128, 66, 0, 192, 56, 193, 199
        DC8 194, 209, 195, 3, 196, 14, 197, 22, 198, 32, 199, 4, 200, 0, 201, 6
        DC8 202, 6, 203, 86, 204, 16, 205, 84, 208, 0, 209, 240, 210, 240, 211
        DC8 240, 212, 128, 213, 0, 214, 16, 215, 42, 216, 0, 217, 4, 218, 128
        DC8 219, 128, 220, 32, 224, 0, 225, 5, 226, 217, 227, 7, 228, 51, 229
        DC8 49, 230, 0, 231, 42, 232, 1, 233, 0, 234, 3, 246, 48, 247, 0, 248
        DC8 0, 249, 0, 250, 56, 255, 2, 1, 128, 2, 224, 3, 116, 4, 25, 5, 125
        DC8 6, 31, 7, 128, 8, 18, 9, 0, 10, 5, 11, 14, 12, 151, 13, 129, 14, 32
        DC8 15, 3, 16, 64, 17, 0, 18, 37, 19, 0, 20, 0, 21, 13, 22, 224, 23, 1
        DC8 24, 0, 25, 218, 26, 0, 27, 0, 28, 82, 29, 96, 30, 17, 32, 0, 33, 0
        DC8 64, 16, 65, 0, 66, 5, 67, 1, 68, 100, 69, 244, 70, 0, 71, 10, 72
        DC8 54, 73, 16, 74, 0, 75, 0, 76, 0, 77, 68, 78, 4, 228, 0, 248, 0, 249
        DC8 128, 255, 4, 224, 1, 225, 224, 255, 6, 64, 12, 65, 0, 66, 1, 67
        DC8 192, 68, 0, 70, 1, 72, 7, 73, 17, 74, 0, 75, 48, 76, 64, 77, 23
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_osd_9inch[2]
tInit_osd_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_pal_9inch[366]
tInit_pal_9inch:
        DATA
        DC8 255, 1, 1, 121, 2, 64, 4, 0, 6, 0, 7, 18, 8, 22, 9, 32, 10, 21, 11
        DC8 208, 12, 76, 16, 250, 17, 131, 18, 116, 19, 189, 20, 158, 21, 0, 23
        DC8 131, 24, 68, 26, 132, 27, 0, 28, 23, 29, 127, 30, 24, 31, 0, 32, 80
        DC8 33, 66, 34, 240, 35, 216, 36, 188, 37, 184, 38, 68, 39, 42, 40, 0
        DC8 41, 0, 42, 120, 43, 68, 44, 48, 45, 20, 46, 165, 47, 224, 48, 0, 49
        DC8 16, 50, 255, 51, 5, 52, 26, 53, 0, 56, 0, 96, 0, 98, 0, 101, 76
        DC8 103, 20, 104, 7, 105, 4, 106, 3, 107, 193, 255, 4, 0, 0, 16, 0, 17
        DC8 0, 18, 2, 19, 208, 20, 0, 21, 19, 22, 1, 23, 3, 24, 0, 48, 0, 49
        DC8 222, 50, 0, 51, 0, 52, 128, 53, 0, 54, 148, 55, 0, 56, 0, 57, 0, 58
        DC8 128, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 112, 0, 113, 0, 114, 5, 115
        DC8 7, 116, 29, 117, 63, 118, 3, 119, 32, 120, 2, 121, 38, 122, 13, 123
        DC8 42, 124, 1, 125, 224, 128, 0, 129, 0, 130, 0, 131, 0, 132, 0, 133
        DC8 0, 134, 0, 135, 0, 136, 14, 137, 242, 138, 0, 139, 4, 140, 48, 141
        DC8 0, 144, 0, 145, 192, 146, 0, 147, 192, 148, 192, 192, 0, 193, 10
        DC8 194, 159, 195, 35, 196, 0, 197, 0, 198, 0, 255, 5, 0, 32, 1, 128, 2
        DC8 128, 3, 128, 4, 120, 5, 160, 6, 160, 7, 130, 8, 130, 9, 130, 10
        DC8 112, 11, 68, 12, 128, 16, 32, 17, 128, 18, 128, 19, 128, 20, 128
        DC8 21, 128, 22, 128, 23, 128, 24, 128, 25, 128, 26, 128, 27, 56, 28, 0
        DC8 32, 32, 33, 128, 34, 128, 35, 128, 36, 128, 37, 128, 38, 128, 39
        DC8 128, 40, 128, 41, 128, 42, 128, 43, 56, 44, 0, 48, 12, 49, 8, 50
        DC8 246, 51, 8, 52, 16, 53, 13, 54, 103, 55, 148, 56, 42, 57, 208, 58
        DC8 2, 59, 24, 80, 61, 81, 195, 82, 252, 83, 0, 84, 0, 85, 0, 112, 5
        DC8 255, 255, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_ntsc_9inch[366]
tInit_ntsc_9inch:
        DATA
        DC8 255, 1, 1, 120, 2, 64, 4, 0, 6, 0, 7, 2, 8, 22, 9, 240, 10, 27, 11
        DC8 208, 12, 92, 16, 250, 17, 131, 18, 116, 19, 189, 20, 158, 21, 0, 23
        DC8 131, 24, 68, 26, 132, 27, 0, 28, 7, 29, 127, 30, 8, 31, 0, 32, 80
        DC8 33, 66, 34, 240, 35, 216, 36, 188, 37, 184, 38, 68, 39, 42, 40, 0
        DC8 41, 0, 42, 120, 43, 68, 44, 48, 45, 20, 46, 165, 47, 224, 48, 0, 49
        DC8 16, 50, 255, 51, 5, 52, 26, 53, 0, 56, 0, 96, 8, 98, 0, 101, 76
        DC8 103, 20, 104, 7, 105, 4, 106, 3, 107, 193, 255, 4, 0, 0, 16, 0, 17
        DC8 0, 18, 2, 19, 208, 20, 0, 21, 19, 22, 1, 23, 3, 24, 0, 48, 0, 49
        DC8 222, 50, 0, 51, 0, 52, 128, 53, 0, 54, 124, 55, 0, 56, 0, 57, 0, 58
        DC8 128, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 112, 0, 113, 0, 114, 4, 115
        DC8 222, 116, 29, 117, 63, 118, 3, 119, 32, 120, 2, 121, 38, 122, 13
        DC8 123, 44, 124, 1, 125, 224, 128, 0, 129, 0, 130, 0, 131, 0, 132, 0
        DC8 133, 0, 134, 0, 135, 0, 136, 14, 137, 242, 138, 0, 139, 4, 140, 48
        DC8 141, 0, 144, 0, 145, 192, 146, 0, 147, 192, 148, 192, 192, 0, 193
        DC8 10, 194, 79, 195, 96, 196, 0, 197, 0, 198, 0, 255, 5, 0, 32, 1, 128
        DC8 2, 128, 3, 128, 4, 120, 5, 160, 6, 160, 7, 130, 8, 130, 9, 130, 10
        DC8 112, 11, 68, 12, 128, 16, 32, 17, 128, 18, 128, 19, 128, 20, 128
        DC8 21, 128, 22, 128, 23, 128, 24, 128, 25, 128, 26, 128, 27, 56, 28, 0
        DC8 32, 32, 33, 128, 34, 128, 35, 128, 36, 128, 37, 128, 38, 128, 39
        DC8 128, 40, 128, 41, 128, 42, 128, 43, 56, 44, 0, 48, 12, 49, 8, 50
        DC8 246, 51, 8, 52, 16, 53, 13, 54, 103, 55, 148, 56, 42, 57, 208, 58
        DC8 2, 59, 24, 80, 61, 81, 195, 82, 252, 83, 0, 84, 0, 85, 0, 112, 5
        DC8 255, 255, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_secam_9inch[2]
tInit_secam_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_RGB_forDVD_9inch[334]
tInit_RGB_forDVD_9inch:
        DATA
        DC8 255, 2, 0, 0, 1, 0, 2, 1, 3, 84, 4, 32, 192, 20, 193, 10, 194, 34
        DC8 195, 3, 196, 42, 197, 9, 198, 32, 199, 4, 200, 0, 201, 6, 202, 0
        DC8 203, 240, 204, 15, 205, 80, 206, 0, 207, 0, 208, 0, 209, 16, 210
        DC8 16, 211, 16, 212, 0, 213, 0, 214, 16, 215, 0, 216, 0, 217, 1, 218
        DC8 128, 219, 128, 220, 16, 221, 0, 222, 0, 223, 0, 255, 4, 0, 1, 16, 0
        DC8 17, 49, 18, 3, 19, 132, 20, 0, 21, 36, 22, 1, 23, 2, 24, 13, 48, 0
        DC8 49, 210, 50, 0, 51, 0, 52, 128, 53, 0, 54, 254, 55, 0, 56, 0, 57, 0
        DC8 58, 128, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 112, 0, 113, 0, 114, 4
        DC8 115, 217, 116, 1, 117, 63, 118, 3, 119, 32, 120, 2, 121, 38, 122, 1
        DC8 123, 37, 124, 1, 125, 224, 128, 0, 129, 0, 130, 0, 131, 0, 132, 0
        DC8 133, 0, 134, 0, 135, 0, 136, 8, 137, 0, 138, 0, 139, 4, 140, 48
        DC8 141, 0, 144, 0, 145, 192, 146, 0, 147, 192, 148, 192, 192, 0, 193
        DC8 10, 194, 79, 195, 49, 196, 0, 197, 0, 198, 0, 255, 5, 0, 32, 1, 128
        DC8 2, 128, 3, 128, 4, 120, 5, 128, 6, 128, 7, 128, 8, 120, 9, 128, 10
        DC8 128, 11, 72, 12, 132, 16, 32, 17, 128, 18, 128, 19, 128, 20, 128
        DC8 21, 128, 22, 128, 23, 128, 24, 128, 25, 128, 26, 128, 27, 56, 28, 0
        DC8 32, 32, 33, 128, 34, 128, 35, 128, 36, 128, 37, 128, 38, 128, 39
        DC8 128, 40, 128, 41, 128, 42, 128, 43, 56, 44, 0, 48, 28, 49, 8, 50
        DC8 246, 51, 8, 52, 16, 53, 13, 54, 103, 55, 148, 56, 42, 57, 208, 58
        DC8 2, 59, 24, 80, 61, 81, 195, 82, 252, 83, 0, 84, 0, 85, 0, 112, 4
        DC8 255, 6, 113, 194, 255, 255, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_YUV_CVBS_NTSC_DTV_9inch[2]
tInit_3PIP_YUV_CVBS_NTSC_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_YUV_CVBS_PAL_DTV_9inch[2]
tInit_3PIP_YUV_CVBS_PAL_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_YUV_DTV_CVBS_NTSC_9inch[2]
tInit_3PIP_YUV_DTV_CVBS_NTSC_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_YUV_DTV_CVBS_PAL_9inch[2]
tInit_3PIP_YUV_DTV_CVBS_PAL_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_DTV_CVBS_NTSC_YUV_9inch[2]
tInit_3PIP_DTV_CVBS_NTSC_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_DTV_CVBS_PAL_YUV_9inch[2]
tInit_3PIP_DTV_CVBS_PAL_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_DTV_YUV_CVBS_NTSC_9inch[2]
tInit_3PIP_DTV_YUV_CVBS_NTSC_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_DTV_YUV_CVBS_PAL_9inch[2]
tInit_3PIP_DTV_YUV_CVBS_PAL_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_CVBS_NTSC_DTV_YUV_9inch[2]
tInit_3PIP_CVBS_NTSC_DTV_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_CVBS_PAL_DTV_YUV_9inch[2]
tInit_3PIP_CVBS_PAL_DTV_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_CVBS_NTSC_YUV_DTV_9inch[2]
tInit_3PIP_CVBS_NTSC_YUV_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_3PIP_CVBS_PAL_YUV_DTV_9inch[2]
tInit_3PIP_CVBS_PAL_YUV_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_CVBS_NTSC_DTV_9inch[2]
tInit_2PIP_CVBS_NTSC_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_CVBS_PAL_DTV_9inch[2]
tInit_2PIP_CVBS_PAL_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_CVBS_NTSC_YUV_9inch[2]
tInit_2PIP_CVBS_NTSC_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_CVBS_PAL_YUV_9inch[2]
tInit_2PIP_CVBS_PAL_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_DTV_YUV_9inch[2]
tInit_2PIP_DTV_YUV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_DTV_CVBS_NTSC_9inch[2]
tInit_2PIP_DTV_CVBS_NTSC_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_DTV_CVBS_PAL_9inch[2]
tInit_2PIP_DTV_CVBS_PAL_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_YUV_DTV_9inch[2]
tInit_2PIP_YUV_DTV_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_YUV_CVBS_NTSC_9inch[2]
tInit_2PIP_YUV_CVBS_NTSC_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(1)
// static __absolute unsigned char const tInit_2PIP_YUV_CVBS_PAL_9inch[2]
tInit_2PIP_YUV_CVBS_PAL_9inch:
        DATA
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_DVD_SET_PIP_9inch[530]
tInit_DVD_SET_PIP_9inch:
        DATA
        DC8 255, 2, 0, 0, 1, 0, 2, 1, 3, 84, 4, 32, 192, 20, 193, 10, 194, 34
        DC8 195, 3, 196, 42, 197, 9, 198, 32, 199, 4, 200, 0, 201, 6, 202, 0
        DC8 203, 240, 204, 15, 205, 80, 206, 0, 207, 0, 208, 0, 209, 16, 210
        DC8 16, 211, 16, 212, 0, 213, 0, 214, 16, 215, 0, 216, 0, 217, 1, 218
        DC8 128, 219, 128, 220, 16, 221, 0, 222, 0, 223, 0, 255, 3, 0, 0, 1, 0
        DC8 2, 1, 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32
        DC8 0, 33, 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0
        DC8 50, 0, 51, 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52, 20, 0, 21
        DC8 36, 22, 1, 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52, 128, 53
        DC8 1, 54, 0, 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61, 0, 62, 0
        DC8 63, 0, 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90, 118, 3
        DC8 119, 37, 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224, 128, 0
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137
        DC8 242, 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147
        DC8 192, 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0, 197, 0
        DC8 198, 0, 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5, 128, 6
        DC8 128, 7, 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16, 32, 17
        DC8 128, 18, 128, 19, 128, 20, 128, 21, 128, 22, 128, 23, 128, 24, 120
        DC8 25, 128, 26, 128, 27, 72, 28, 4, 32, 32, 33, 144, 34, 130, 35, 150
        DC8 36, 91, 37, 128, 38, 128, 39, 139, 40, 139, 41, 139, 42, 150, 43
        DC8 68, 44, 0, 255, 6, 0, 0, 1, 29, 2, 2, 3, 208, 4, 0, 5, 41, 6, 1, 7
        DC8 224, 8, 0, 9, 1, 10, 101, 11, 1, 12, 82, 13, 0, 14, 0, 15, 0, 16, 0
        DC8 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 224, 23, 8, 24, 0, 25
        DC8 8, 26, 0, 27, 128, 28, 1, 29, 53, 30, 0, 31, 60, 32, 60, 33, 1, 34
        DC8 216, 35, 1, 36, 98, 37, 245, 38, 255, 48, 0, 49, 69, 50, 3, 51, 32
        DC8 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1, 58, 0, 59, 1, 60, 0
        DC8 61, 0, 62, 53, 63, 0, 64, 0, 65, 3, 66, 62, 67, 1, 68, 247, 69, 129
        DC8 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76, 0, 77, 2, 78, 0
        DC8 79, 0, 80, 58, 81, 3, 82, 32, 83, 1, 84, 226, 85, 244, 86, 252, 96
        DC8 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 198, 114, 180, 128, 128
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 255, 255
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_AUX_PAL_SET_PIP_9inch[464]
tInit_AUX_PAL_SET_PIP_9inch:
        DATA
        DC8 255, 1, 16, 250, 17, 131, 19, 189, 20, 158, 255, 3, 0, 2, 1, 0, 2
        DC8 1, 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0
        DC8 33, 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50
        DC8 0, 51, 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52, 20, 0, 21, 36
        DC8 22, 1, 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52, 128, 53, 1
        DC8 54, 0, 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61, 0, 62, 0
        DC8 63, 0, 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90, 118, 3
        DC8 119, 37, 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224, 128, 0
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137
        DC8 242, 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147
        DC8 192, 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0, 197, 0
        DC8 198, 0, 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5, 128, 6
        DC8 128, 7, 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16, 32, 17
        DC8 128, 18, 128, 19, 128, 20, 120, 21, 160, 22, 160, 23, 130, 24, 130
        DC8 25, 130, 26, 112, 27, 68, 28, 128, 32, 32, 33, 144, 34, 130, 35
        DC8 150, 36, 91, 37, 128, 38, 128, 39, 139, 40, 139, 41, 139, 42, 150
        DC8 43, 68, 44, 0, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5, 3, 6, 1
        DC8 7, 32, 8, 0, 9, 1, 10, 122, 11, 1, 12, 0, 13, 0, 14, 95, 15, 0, 16
        DC8 0, 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 240, 23, 8, 24, 0
        DC8 25, 6, 26, 133, 27, 128, 28, 0, 29, 166, 30, 0, 31, 73, 32, 58, 33
        DC8 1, 34, 212, 35, 1, 36, 90, 37, 240, 38, 248, 48, 0, 49, 69, 50, 3
        DC8 51, 32, 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1, 58, 0, 59, 1
        DC8 60, 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 3, 66, 62, 67, 1, 68, 247
        DC8 69, 129, 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76, 0, 77
        DC8 13, 78, 0, 79, 0, 80, 26, 81, 3, 82, 32, 83, 1, 84, 226, 85, 233
        DC8 86, 252, 96, 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 194, 114, 180
        DC8 128, 128, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_AUX_NTSC_SET_PIP_9inch[464]
tInit_AUX_NTSC_SET_PIP_9inch:
        DATA
        DC8 255, 1, 16, 250, 17, 131, 19, 189, 20, 158, 255, 3, 0, 2, 1, 0, 2
        DC8 1, 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0
        DC8 33, 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50
        DC8 0, 51, 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52, 20, 0, 21, 36
        DC8 22, 1, 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52, 128, 53, 1
        DC8 54, 0, 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61, 0, 62, 0
        DC8 63, 0, 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90, 118, 3
        DC8 119, 37, 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224, 128, 0
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137
        DC8 242, 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147
        DC8 192, 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0, 197, 0
        DC8 198, 0, 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5, 128, 6
        DC8 128, 7, 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16, 32, 17
        DC8 128, 18, 128, 19, 128, 20, 120, 21, 160, 22, 160, 23, 130, 24, 130
        DC8 25, 130, 26, 112, 27, 68, 28, 128, 32, 32, 33, 144, 34, 130, 35
        DC8 150, 36, 91, 37, 128, 38, 128, 39, 139, 40, 139, 41, 139, 42, 150
        DC8 43, 68, 44, 0, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5, 0, 6, 0
        DC8 7, 240, 8, 0, 9, 1, 10, 125, 11, 1, 12, 0, 13, 0, 14, 95, 15, 0, 16
        DC8 0, 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 240, 23, 8, 24, 0
        DC8 25, 5, 26, 112, 27, 128, 28, 0, 29, 166, 30, 0, 31, 73, 32, 58, 33
        DC8 1, 34, 212, 35, 1, 36, 90, 37, 240, 38, 248, 48, 0, 49, 69, 50, 3
        DC8 51, 32, 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1, 58, 0, 59, 1
        DC8 60, 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 3, 66, 62, 67, 1, 68, 247
        DC8 69, 129, 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76, 0, 77
        DC8 13, 78, 0, 79, 0, 80, 26, 81, 3, 82, 32, 83, 1, 84, 226, 85, 233
        DC8 86, 252, 96, 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 194, 114, 180
        DC8 128, 128, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0
        DC8 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_Video_NTSC_SET_PIP_9inch[540]
tInit_Video_NTSC_SET_PIP_9inch:
        DATA
        DC8 255, 1, 1, 120, 2, 64, 4, 0, 6, 0, 7, 2, 8, 22, 9, 240, 10, 27, 11
        DC8 208, 12, 92, 16, 250, 17, 121, 18, 116, 19, 158, 20, 158, 21, 0, 23
        DC8 131, 24, 68, 26, 132, 27, 0, 28, 7, 29, 127, 30, 8, 31, 0, 32, 80
        DC8 33, 66, 34, 240, 35, 216, 36, 188, 37, 184, 38, 68, 39, 42, 40, 0
        DC8 41, 0, 42, 120, 43, 68, 44, 48, 45, 20, 46, 165, 47, 228, 48, 0, 49
        DC8 16, 50, 0, 51, 5, 52, 26, 53, 0, 56, 0, 96, 8, 98, 0, 101, 76, 103
        DC8 20, 104, 7, 105, 4, 106, 3, 107, 193, 255, 3, 0, 2, 1, 0, 2, 1, 3
        DC8 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0, 33, 0
        DC8 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50, 0, 51
        DC8 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52, 20, 0, 21, 36, 22, 1
        DC8 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52, 128, 53, 1, 54, 0
        DC8 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61, 0, 62, 0, 63, 0
        DC8 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90, 118, 3, 119, 37
        DC8 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224, 128, 0, 129, 0
        DC8 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137, 242
        DC8 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147, 192
        DC8 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0, 197, 0, 198, 0
        DC8 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5, 128, 6, 128, 7
        DC8 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16, 32, 17, 128, 18
        DC8 128, 19, 128, 20, 120, 21, 160, 22, 160, 23, 130, 24, 130, 25, 130
        DC8 26, 112, 27, 68, 28, 128, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5
        DC8 2, 6, 0, 7, 240, 8, 0, 9, 1, 10, 245, 11, 1, 12, 0, 13, 0, 14, 95
        DC8 15, 0, 16, 0, 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 240, 23
        DC8 8, 24, 0, 25, 6, 26, 251, 27, 128, 28, 1, 29, 163, 30, 0, 31, 95
        DC8 32, 58, 33, 1, 34, 100, 35, 1, 36, 12, 37, 240, 38, 248, 48, 0, 49
        DC8 69, 50, 3, 51, 32, 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1, 58
        DC8 0, 59, 1, 60, 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 3, 66, 62, 67, 1
        DC8 68, 247, 69, 129, 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76
        DC8 0, 77, 13, 78, 0, 79, 0, 80, 26, 81, 3, 82, 32, 83, 1, 84, 226, 85
        DC8 233, 86, 252, 96, 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 194, 114
        DC8 180, 128, 128, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135
        DC8 0, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_Video_PAL_SET_PIP_9inch[540]
tInit_Video_PAL_SET_PIP_9inch:
        DATA
        DC8 255, 1, 1, 105, 2, 64, 4, 0, 6, 0, 7, 18, 8, 22, 9, 32, 10, 20, 11
        DC8 208, 12, 92, 16, 250, 17, 121, 18, 116, 19, 158, 20, 158, 21, 0, 23
        DC8 131, 24, 68, 26, 132, 27, 0, 28, 23, 29, 127, 30, 24, 31, 0, 32, 80
        DC8 33, 66, 34, 240, 35, 216, 36, 188, 37, 184, 38, 68, 39, 42, 40, 0
        DC8 41, 0, 42, 120, 43, 68, 44, 48, 45, 20, 46, 165, 47, 228, 48, 0, 49
        DC8 16, 50, 255, 51, 5, 52, 26, 53, 0, 56, 0, 96, 8, 98, 0, 101, 76
        DC8 103, 20, 104, 7, 105, 4, 106, 3, 107, 193, 255, 3, 0, 2, 1, 0, 2, 1
        DC8 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0, 33
        DC8 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50, 0
        DC8 51, 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52, 20, 0, 21, 36
        DC8 22, 1, 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52, 128, 53, 1
        DC8 54, 0, 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61, 0, 62, 0
        DC8 63, 0, 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90, 118, 3
        DC8 119, 37, 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224, 128, 0
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137
        DC8 242, 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147
        DC8 192, 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0, 197, 0
        DC8 198, 0, 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5, 128, 6
        DC8 128, 7, 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16, 32, 17
        DC8 128, 18, 128, 19, 128, 20, 120, 21, 160, 22, 160, 23, 130, 24, 130
        DC8 25, 130, 26, 112, 27, 68, 28, 128, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208
        DC8 4, 0, 5, 9, 6, 1, 7, 32, 8, 0, 9, 1, 10, 244, 11, 1, 12, 9, 13, 0
        DC8 14, 95, 15, 0, 16, 0, 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22
        DC8 240, 23, 8, 24, 0, 25, 8, 26, 0, 27, 128, 28, 1, 29, 163, 30, 0, 31
        DC8 95, 32, 58, 33, 1, 34, 100, 35, 1, 36, 12, 37, 240, 38, 248, 48, 0
        DC8 49, 69, 50, 3, 51, 32, 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1
        DC8 58, 0, 59, 1, 60, 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 3, 66, 62, 67
        DC8 1, 68, 247, 69, 129, 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128
        DC8 76, 0, 77, 13, 78, 0, 79, 0, 80, 26, 81, 3, 82, 32, 83, 1, 84, 226
        DC8 85, 233, 86, 252, 96, 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 194
        DC8 114, 180, 128, 128, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0
        DC8 135, 0, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_TV_NTSC_SET_PIP_9inch[464]
tInit_TV_NTSC_SET_PIP_9inch:
        DATA
        DC8 255, 1, 16, 250, 17, 131, 19, 189, 20, 158, 255, 3, 0, 2, 1, 0, 2
        DC8 1, 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0
        DC8 33, 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50
        DC8 0, 51, 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52, 20, 0, 21, 36
        DC8 22, 1, 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52, 128, 53, 1
        DC8 54, 0, 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61, 0, 62, 0
        DC8 63, 0, 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90, 118, 3
        DC8 119, 37, 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224, 128, 0
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137
        DC8 242, 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147
        DC8 192, 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0, 197, 0
        DC8 198, 0, 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5, 128, 6
        DC8 128, 7, 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16, 32, 17
        DC8 128, 18, 128, 19, 128, 20, 120, 21, 160, 22, 160, 23, 130, 24, 130
        DC8 25, 130, 26, 112, 27, 68, 28, 128, 32, 32, 33, 144, 34, 130, 35
        DC8 150, 36, 91, 37, 128, 38, 128, 39, 139, 40, 139, 41, 139, 42, 150
        DC8 43, 68, 44, 0, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5, 0, 6, 0
        DC8 7, 240, 8, 0, 9, 1, 10, 125, 11, 1, 12, 0, 13, 0, 14, 95, 15, 0, 16
        DC8 0, 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 240, 23, 8, 24, 0
        DC8 25, 5, 26, 82, 27, 128, 28, 1, 29, 60, 30, 0, 31, 69, 32, 58, 33, 1
        DC8 34, 215, 35, 1, 36, 98, 37, 240, 38, 248, 48, 0, 49, 69, 50, 3, 51
        DC8 32, 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1, 58, 0, 59, 1, 60
        DC8 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 3, 66, 62, 67, 1, 68, 247, 69
        DC8 129, 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76, 0, 77, 13
        DC8 78, 0, 79, 0, 80, 26, 81, 3, 82, 32, 83, 1, 84, 226, 85, 233, 86
        DC8 252, 96, 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 194, 114, 180, 128
        DC8 128, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 255
        DC8 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_TV_PAL_SET_PIP_9inch[468]
tInit_TV_PAL_SET_PIP_9inch:
        DATA
        DC8 255, 1, 7, 18, 9, 32, 16, 250, 17, 131, 19, 189, 20, 158, 255, 3, 0
        DC8 2, 1, 0, 2, 1, 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0
        DC8 19, 0, 32, 0, 33, 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48
        DC8 0, 49, 0, 50, 0, 51, 0, 255, 4, 0, 2, 16, 0, 17, 86, 18, 3, 19, 52
        DC8 20, 0, 21, 36, 22, 1, 23, 2, 24, 13, 48, 1, 49, 0, 50, 0, 51, 0, 52
        DC8 128, 53, 1, 54, 0, 55, 0, 56, 0, 57, 0, 58, 128, 59, 16, 60, 0, 61
        DC8 0, 62, 0, 63, 0, 112, 0, 113, 0, 114, 3, 115, 208, 116, 1, 117, 90
        DC8 118, 3, 119, 37, 120, 2, 121, 38, 122, 1, 123, 34, 124, 1, 125, 224
        DC8 128, 0, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136
        DC8 8, 137, 242, 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146
        DC8 0, 147, 192, 148, 192, 192, 0, 193, 7, 194, 221, 195, 0, 196, 0
        DC8 197, 0, 198, 0, 255, 5, 0, 32, 1, 157, 2, 138, 3, 155, 4, 96, 5
        DC8 128, 6, 128, 7, 128, 8, 128, 9, 128, 10, 120, 11, 68, 12, 128, 16
        DC8 32, 17, 128, 18, 128, 19, 128, 20, 120, 21, 160, 22, 160, 23, 130
        DC8 24, 130, 25, 130, 26, 112, 27, 68, 28, 128, 32, 32, 33, 144, 34
        DC8 130, 35, 150, 36, 91, 37, 128, 38, 128, 39, 139, 40, 139, 41, 139
        DC8 42, 150, 43, 68, 44, 0, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5
        DC8 0, 6, 1, 7, 32, 8, 0, 9, 1, 10, 125, 11, 1, 12, 0, 13, 0, 14, 95
        DC8 15, 0, 16, 0, 17, 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 240, 23
        DC8 8, 24, 0, 25, 6, 26, 114, 27, 128, 28, 1, 29, 60, 30, 0, 31, 69, 32
        DC8 58, 33, 1, 34, 215, 35, 1, 36, 98, 37, 240, 38, 248, 48, 0, 49, 69
        DC8 50, 3, 51, 32, 52, 0, 53, 31, 54, 1, 55, 226, 56, 0, 57, 1, 58, 0
        DC8 59, 1, 60, 0, 61, 0, 62, 0, 63, 0, 64, 0, 65, 3, 66, 62, 67, 1, 68
        DC8 247, 69, 129, 70, 208, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76, 0
        DC8 77, 13, 78, 0, 79, 0, 80, 26, 81, 3, 82, 32, 83, 1, 84, 226, 85
        DC8 233, 86, 252, 96, 0, 97, 28, 98, 224, 99, 0, 112, 0, 113, 194, 114
        DC8 180, 128, 128, 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135
        DC8 0, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_PARK_NTSC_SET_PIP_9inch[486]
tInit_PARK_NTSC_SET_PIP_9inch:
        DATA
        DC8 255, 1, 1, 120, 2, 64, 4, 0, 6, 0, 7, 2, 8, 22, 9, 240, 10, 27, 11
        DC8 208, 12, 92, 16, 250, 17, 121, 18, 116, 19, 158, 20, 158, 21, 0, 23
        DC8 131, 24, 68, 26, 132, 27, 0, 28, 7, 29, 127, 30, 8, 31, 0, 32, 80
        DC8 33, 66, 34, 240, 35, 216, 36, 188, 37, 184, 38, 68, 39, 42, 40, 0
        DC8 41, 0, 42, 120, 43, 68, 44, 48, 45, 20, 46, 165, 47, 228, 48, 0, 49
        DC8 16, 50, 0, 51, 5, 52, 26, 53, 0, 56, 0, 96, 8, 98, 0, 101, 76, 103
        DC8 20, 104, 7, 105, 4, 106, 3, 107, 193, 255, 3, 0, 2, 1, 0, 2, 1, 3
        DC8 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0, 33, 0
        DC8 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50, 0, 51
        DC8 0, 255, 4, 0, 2, 16, 0, 17, 91, 18, 3, 19, 132, 20, 0, 21, 30, 22
        DC8 1, 23, 2, 24, 13, 48, 0, 49, 253, 50, 0, 51, 0, 52, 128, 53, 0, 54
        DC8 254, 55, 0, 56, 0, 57, 0, 58, 128, 59, 0, 60, 0, 61, 0, 62, 0, 63
        DC8 0, 112, 0, 113, 0, 114, 4, 115, 93, 116, 1, 117, 63, 118, 3, 119
        DC8 32, 120, 2, 121, 38, 122, 1, 123, 36, 124, 1, 125, 224, 128, 0, 129
        DC8 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 8, 137, 0
        DC8 138, 0, 139, 4, 140, 48, 141, 0, 144, 0, 145, 192, 146, 0, 147, 192
        DC8 148, 192, 192, 0, 193, 9, 194, 19, 195, 138, 196, 0, 197, 0, 198, 0
        DC8 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5, 0, 6, 0, 7, 240, 8, 0, 9
        DC8 1, 10, 245, 11, 1, 12, 0, 13, 0, 14, 95, 15, 0, 16, 0, 17, 3, 18
        DC8 62, 19, 1, 20, 247, 21, 192, 22, 240, 23, 8, 24, 0, 25, 7, 26, 8
        DC8 27, 128, 28, 1, 29, 154, 30, 0, 31, 79, 32, 60, 33, 1, 34, 103, 35
        DC8 1, 36, 12, 37, 255, 38, 254, 48, 0, 49, 71, 50, 3, 51, 32, 52, 0
        DC8 53, 30, 54, 1, 55, 224, 56, 16, 57, 1, 58, 0, 59, 1, 60, 0, 61, 127
        DC8 62, 0, 63, 0, 64, 0, 65, 3, 66, 48, 67, 1, 68, 247, 69, 129, 70
        DC8 232, 71, 7, 72, 238, 73, 8, 74, 0, 75, 128, 76, 0, 77, 4, 78, 0, 79
        DC8 0, 80, 12, 81, 3, 82, 32, 83, 1, 84, 224, 85, 240, 86, 252, 96, 0
        DC8 97, 28, 98, 224, 99, 0, 112, 8, 113, 194, 114, 188, 128, 128, 129
        DC8 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 255, 255, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_PARK_PAL_SET_PIP_9inch[352]
tInit_PARK_PAL_SET_PIP_9inch:
        DATA
        DC8 255, 1, 1, 121, 2, 64, 4, 0, 6, 0, 7, 18, 8, 22, 9, 32, 10, 27, 11
        DC8 208, 12, 92, 16, 250, 17, 121, 18, 116, 19, 158, 20, 158, 21, 0, 23
        DC8 131, 24, 68, 26, 132, 27, 0, 28, 23, 29, 127, 30, 24, 31, 0, 32, 80
        DC8 33, 66, 34, 240, 35, 216, 36, 188, 37, 184, 38, 68, 39, 42, 40, 0
        DC8 41, 0, 42, 120, 43, 68, 44, 48, 45, 20, 46, 165, 47, 228, 48, 0, 49
        DC8 16, 50, 255, 51, 5, 52, 26, 53, 0, 56, 0, 96, 8, 98, 0, 101, 76
        DC8 103, 20, 104, 7, 105, 4, 106, 3, 107, 193, 255, 3, 0, 2, 1, 0, 2, 1
        DC8 3, 5, 4, 0, 5, 0, 6, 0, 7, 0, 16, 0, 17, 0, 18, 0, 19, 0, 32, 0, 33
        DC8 0, 34, 0, 35, 3, 36, 0, 37, 0, 38, 0, 39, 0, 48, 0, 49, 0, 50, 0
        DC8 51, 0, 255, 6, 0, 0, 1, 0, 2, 2, 3, 208, 4, 0, 5, 22, 6, 1, 7, 32
        DC8 8, 0, 9, 1, 10, 241, 11, 1, 12, 0, 13, 0, 14, 95, 15, 0, 16, 0, 17
        DC8 3, 18, 62, 19, 1, 20, 247, 21, 192, 22, 240, 23, 8, 24, 0, 25, 7
        DC8 26, 8, 27, 128, 28, 1, 29, 143, 30, 0, 31, 75, 32, 60, 33, 1, 34
        DC8 100, 35, 1, 36, 12, 37, 255, 38, 254, 48, 0, 49, 74, 50, 3, 51, 32
        DC8 52, 0, 53, 31, 54, 1, 55, 224, 56, 16, 57, 1, 58, 0, 59, 1, 60, 0
        DC8 61, 127, 62, 0, 63, 0, 64, 0, 65, 3, 66, 48, 67, 1, 68, 247, 69
        DC8 129, 70, 232, 71, 8, 72, 0, 73, 8, 74, 0, 75, 128, 76, 0, 77, 0, 78
        DC8 0, 79, 0, 80, 12, 81, 3, 82, 32, 83, 1, 84, 224, 85, 240, 86, 249
        DC8 96, 0, 97, 28, 98, 224, 99, 0, 112, 8, 113, 194, 114, 188, 128, 128
        DC8 129, 0, 130, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_CarMedia_9inch[452]
tInit_CarMedia_9inch:
        DATA
        DC8 255, 0, 2, 74, 3, 255, 4, 0, 6, 0, 7, 2, 8, 129, 15, 0, 31, 0, 64
        DC8 3, 65, 19, 66, 19, 67, 15, 68, 224, 69, 48, 70, 32, 71, 0, 72, 0
        DC8 75, 0, 80, 14, 81, 0, 82, 2, 83, 5, 84, 0, 86, 0, 87, 0, 95, 0, 96
        DC8 0, 102, 0, 103, 0, 104, 0, 105, 2, 106, 32, 107, 240, 108, 32, 109
        DC8 208, 110, 16, 111, 16, 212, 0, 231, 22, 232, 1, 233, 221, 234, 0
        DC8 235, 64, 236, 48, 237, 33, 246, 0, 247, 22, 248, 1, 249, 0, 250, 0
        DC8 251, 64, 252, 48, 253, 49, 255, 1, 1, 179, 2, 78, 4, 0, 5, 0, 6, 0
        DC8 7, 2, 8, 21, 9, 240, 10, 15, 11, 208, 12, 204, 13, 0, 16, 128, 17
        DC8 92, 18, 17, 19, 128, 20, 128, 21, 0, 23, 128, 24, 68, 26, 16, 27, 0
        DC8 28, 39, 29, 127, 30, 0, 31, 0, 32, 80, 33, 18, 34, 240, 35, 216, 36
        DC8 188, 37, 184, 38, 68, 39, 56, 40, 0, 41, 0, 42, 120, 43, 68, 44, 48
        DC8 45, 20, 46, 165, 47, 230, 48, 192, 49, 0, 50, 0, 51, 69, 52, 26, 53
        DC8 0, 54, 227, 55, 40, 56, 175, 64, 0, 65, 128, 66, 0, 192, 56, 193
        DC8 199, 194, 209, 195, 3, 196, 14, 197, 22, 198, 32, 199, 4, 200, 0
        DC8 201, 6, 202, 6, 203, 86, 204, 16, 205, 84, 208, 0, 209, 240, 210
        DC8 240, 211, 240, 212, 128, 213, 0, 214, 16, 215, 42, 216, 0, 217, 4
        DC8 218, 128, 219, 128, 220, 32, 224, 0, 225, 5, 226, 217, 227, 7, 228
        DC8 51, 229, 49, 230, 0, 231, 42, 232, 1, 233, 0, 234, 3, 246, 48, 247
        DC8 0, 248, 0, 249, 0, 250, 56, 255, 2, 1, 128, 2, 224, 3, 62, 4, 25, 5
        DC8 155, 6, 31, 7, 128, 8, 19, 9, 0, 10, 5, 11, 14, 12, 144, 13, 129
        DC8 14, 32, 15, 3, 16, 67, 17, 0, 18, 37, 19, 0, 20, 0, 21, 14, 22, 224
        DC8 23, 1, 24, 0, 25, 218, 26, 0, 27, 0, 28, 82, 29, 112, 30, 16, 32, 0
        DC8 33, 0, 64, 16, 65, 0, 66, 5, 67, 1, 68, 100, 69, 244, 70, 0, 71, 10
        DC8 72, 54, 73, 16, 74, 0, 75, 0, 76, 0, 77, 64, 78, 4, 129, 144, 130
        DC8 144, 131, 144, 132, 144, 135, 128, 136, 128, 137, 128, 138, 128
        DC8 228, 0, 248, 0, 249, 128, 255, 6, 64, 12, 65, 0, 66, 1, 67, 192, 68
        DC8 0, 70, 1, 72, 7, 73, 16, 74, 0, 75, 48, 76, 64, 77, 23, 78, 0, 255
        DC8 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_ARM_9inch[436]
tInit_ARM_9inch:
        DATA
        DC8 255, 0, 2, 107, 3, 255, 4, 0, 6, 6, 7, 2, 8, 128, 15, 0, 31, 0, 64
        DC8 3, 65, 17, 66, 36, 67, 32, 68, 88, 69, 89, 70, 0, 71, 0, 72, 0, 75
        DC8 0, 80, 0, 81, 0, 82, 0, 83, 3, 84, 0, 86, 0, 87, 0, 95, 0, 96, 0
        DC8 102, 0, 103, 0, 104, 0, 105, 2, 106, 32, 107, 240, 108, 32, 109
        DC8 208, 110, 16, 111, 16, 212, 0, 231, 22, 232, 1, 233, 220, 234, 0
        DC8 235, 64, 236, 48, 237, 33, 246, 0, 247, 22, 248, 1, 249, 0, 250, 0
        DC8 251, 64, 252, 48, 253, 49, 255, 1, 1, 147, 2, 78, 4, 0, 5, 0, 6, 0
        DC8 7, 2, 8, 21, 9, 240, 10, 15, 11, 208, 12, 204, 13, 0, 16, 128, 17
        DC8 92, 18, 17, 19, 128, 20, 128, 21, 0, 23, 128, 24, 68, 26, 16, 27, 0
        DC8 28, 23, 29, 127, 30, 0, 31, 0, 32, 80, 33, 18, 34, 240, 35, 216, 36
        DC8 188, 37, 184, 38, 68, 39, 56, 40, 0, 41, 0, 42, 120, 43, 68, 44, 48
        DC8 45, 20, 46, 165, 47, 230, 48, 80, 49, 0, 50, 0, 51, 69, 52, 26, 53
        DC8 0, 54, 227, 55, 40, 56, 175, 64, 0, 65, 128, 66, 0, 192, 56, 193
        DC8 199, 194, 209, 195, 3, 196, 14, 197, 22, 198, 32, 199, 4, 200, 0
        DC8 201, 6, 202, 6, 203, 86, 204, 16, 205, 84, 208, 0, 209, 240, 210
        DC8 240, 211, 240, 212, 128, 213, 0, 214, 16, 215, 42, 216, 0, 217, 4
        DC8 218, 128, 219, 128, 220, 32, 224, 0, 225, 5, 226, 217, 227, 7, 228
        DC8 51, 229, 49, 230, 0, 231, 42, 232, 1, 233, 0, 234, 3, 246, 48, 247
        DC8 0, 248, 0, 249, 0, 250, 56, 255, 2, 1, 0, 2, 224, 3, 0, 4, 32, 5, 0
        DC8 6, 30, 7, 128, 8, 18, 9, 0, 10, 4, 11, 14, 12, 0, 13, 129, 14, 64
        DC8 15, 3, 16, 46, 17, 0, 18, 36, 19, 0, 20, 3, 21, 33, 22, 88, 23, 2
        DC8 24, 99, 25, 34, 26, 0, 27, 0, 28, 66, 29, 254, 30, 16, 32, 0, 33, 0
        DC8 64, 16, 65, 0, 66, 5, 67, 1, 68, 100, 69, 244, 70, 0, 71, 10, 72
        DC8 54, 73, 16, 74, 0, 75, 0, 76, 0, 77, 68, 78, 4, 228, 0, 248, 0, 249
        DC8 128, 255, 6, 64, 12, 65, 0, 66, 1, 67, 192, 68, 0, 70, 1, 72, 7, 73
        DC8 1, 74, 0, 75, 48, 76, 64, 77, 23, 78, 0, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_CVBS_9inch[452]
tInit_CVBS_9inch:
        DATA
        DC8 255, 0, 2, 235, 3, 255, 4, 0, 6, 6, 7, 2, 8, 128, 15, 0, 31, 0, 64
        DC8 0, 65, 0, 66, 21, 67, 38, 68, 224, 69, 0, 70, 0, 71, 0, 72, 0, 75
        DC8 0, 80, 14, 81, 0, 82, 0, 83, 5, 84, 0, 86, 2, 87, 0, 95, 0, 96, 0
        DC8 102, 0, 103, 0, 104, 0, 105, 2, 106, 32, 107, 240, 108, 32, 109
        DC8 208, 110, 16, 111, 16, 212, 0, 231, 22, 232, 2, 233, 0, 234, 0, 235
        DC8 64, 236, 48, 237, 33, 246, 0, 247, 22, 248, 1, 249, 0, 250, 0, 251
        DC8 64, 252, 48, 253, 49, 255, 1, 1, 104, 2, 70, 4, 0, 5, 0, 6, 0, 7, 2
        DC8 8, 21, 9, 240, 10, 15, 11, 208, 12, 204, 13, 0, 16, 176, 17, 133
        DC8 18, 16, 19, 133, 20, 133, 21, 0, 23, 128, 24, 68, 26, 16, 27, 0, 28
        DC8 7, 29, 127, 30, 0, 31, 0, 32, 80, 33, 18, 34, 240, 35, 216, 36, 188
        DC8 37, 184, 38, 68, 39, 56, 40, 0, 41, 0, 42, 120, 43, 68, 44, 48, 45
        DC8 20, 46, 165, 47, 230, 48, 0, 49, 16, 50, 255, 51, 69, 52, 26, 53, 0
        DC8 54, 227, 55, 40, 56, 175, 64, 0, 65, 128, 66, 0, 192, 57, 193, 199
        DC8 194, 209, 195, 3, 196, 14, 197, 22, 198, 32, 199, 4, 200, 0, 201, 6
        DC8 202, 6, 203, 86, 204, 16, 205, 84, 208, 0, 209, 240, 210, 240, 211
        DC8 240, 212, 128, 213, 0, 214, 16, 215, 42, 216, 0, 217, 4, 218, 128
        DC8 219, 128, 220, 32, 224, 0, 225, 5, 226, 217, 227, 7, 228, 51, 229
        DC8 49, 230, 0, 231, 42, 232, 1, 233, 0, 234, 3, 246, 48, 247, 0, 248
        DC8 0, 249, 0, 250, 56, 255, 2, 1, 128, 2, 224, 3, 137, 4, 22, 5, 200
        DC8 6, 15, 7, 128, 8, 18, 9, 0, 10, 5, 11, 14, 12, 70, 13, 193, 14, 32
        DC8 15, 3, 16, 66, 17, 0, 18, 37, 19, 0, 20, 3, 21, 46, 22, 224, 23, 1
        DC8 24, 0, 25, 255, 26, 0, 27, 0, 28, 98, 29, 156, 30, 16, 32, 0, 33, 0
        DC8 64, 16, 65, 0, 66, 5, 67, 1, 68, 100, 69, 244, 70, 0, 71, 10, 72
        DC8 54, 73, 16, 74, 0, 75, 0, 76, 0, 77, 68, 78, 4, 129, 128, 130, 128
        DC8 131, 128, 132, 128, 135, 128, 136, 128, 137, 128, 138, 128, 228, 0
        DC8 248, 0, 249, 128, 255, 6, 64, 12, 65, 0, 66, 1, 67, 192, 68, 0, 70
        DC8 1, 72, 5, 73, 1, 74, 0, 75, 58, 76, 64, 77, 0, 78, 0, 255, 255

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
// static __absolute unsigned char const tInit_DTV_9inch[456]
tInit_DTV_9inch:
        DATA
        DC8 255, 0, 2, 203, 3, 255, 4, 0, 6, 6, 7, 2, 8, 128, 15, 0, 31, 0, 64
        DC8 2, 65, 19, 66, 21, 67, 15, 68, 224, 69, 60, 70, 0, 71, 0, 72, 0, 75
        DC8 0, 80, 14, 81, 0, 82, 0, 83, 5, 84, 0, 86, 0, 87, 0, 95, 0, 96, 0
        DC8 102, 0, 103, 0, 104, 0, 105, 2, 106, 32, 107, 240, 108, 32, 109
        DC8 208, 110, 16, 111, 16, 212, 0, 231, 22, 232, 2, 233, 0, 234, 0, 235
        DC8 64, 236, 48, 237, 33, 246, 0, 247, 22, 248, 1, 249, 0, 250, 0, 251
        DC8 64, 252, 48, 253, 49, 255, 1, 1, 147, 2, 78, 4, 0, 5, 0, 6, 0, 7, 2
        DC8 8, 21, 9, 240, 10, 15, 11, 208, 12, 204, 13, 0, 16, 128, 17, 92, 18
        DC8 17, 19, 128, 20, 128, 21, 0, 23, 128, 24, 68, 26, 16, 27, 0, 28, 39
        DC8 29, 127, 30, 0, 31, 0, 32, 80, 33, 18, 34, 240, 35, 216, 36, 188
        DC8 37, 184, 38, 68, 39, 56, 40, 0, 41, 0, 42, 120, 43, 68, 44, 48, 45
        DC8 20, 46, 165, 47, 230, 48, 208, 49, 0, 50, 0, 51, 69, 52, 26, 53, 0
        DC8 54, 227, 55, 40, 56, 175, 64, 0, 65, 128, 66, 0, 192, 56, 193, 199
        DC8 194, 209, 195, 3, 196, 14, 197, 22, 198, 32, 199, 4, 200, 0, 201, 6
        DC8 202, 6, 203, 86, 204, 16, 205, 84, 208, 0, 209, 240, 210, 240, 211
        DC8 240, 212, 128, 213, 0, 214, 16, 215, 42, 216, 0, 217, 4, 218, 128
        DC8 219, 128, 220, 32, 224, 0, 225, 5, 226, 217, 227, 7, 228, 51, 229
        DC8 49, 230, 0, 231, 42, 232, 1, 233, 0, 234, 3, 246, 48, 247, 0, 248
        DC8 0, 249, 0, 250, 56, 255, 2, 1, 128, 2, 224, 3, 0, 4, 20, 5, 0, 6
        DC8 32, 7, 128, 8, 18, 9, 0, 10, 4, 11, 14, 12, 43, 13, 129, 14, 48, 15
        DC8 3, 16, 66, 17, 0, 18, 37, 19, 0, 20, 0, 21, 13, 22, 224, 23, 1, 24
        DC8 0, 25, 218, 26, 0, 27, 0, 28, 82, 29, 96, 30, 16, 32, 0, 33, 0, 64
        DC8 16, 65, 0, 66, 5, 67, 1, 68, 100, 69, 244, 70, 0, 71, 10, 72, 54
        DC8 73, 16, 74, 0, 75, 0, 76, 0, 77, 68, 78, 4, 129, 160, 130, 160, 131
        DC8 160, 132, 117, 135, 112, 136, 112, 137, 112, 138, 112, 228, 0, 248
        DC8 0, 249, 128, 255, 4, 224, 1, 225, 224, 255, 6, 64, 12, 65, 0, 66, 1
        DC8 67, 192, 68, 0, 70, 1, 72, 7, 73, 17, 74, 0, 75, 48, 76, 64, 77, 23
        DC8 255, 255
//    6 
//    7 #include "libr.h"
//    8 //#include "main.h"
//    9 
//   10 #include "tw8836_func.h"
//   11 
//   12 
//   13 
//   14 #include "i2c_driver.h"

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function SetAutoDetectStd
        THUMB
//   15 void SetAutoDetectStd(void)
//   16 {
SetAutoDetectStd:
        PUSH     {R3-R5,LR}
          CFI R14 Frame(CFA, -4)
          CFI R5 Frame(CFA, -8)
          CFI R4 Frame(CFA, -12)
          CFI CFA R13+16
//   17 	BYTE val;
//   18 	BYTE page;
//   19 
//   20 	page = ReadTW88(0xFF);
        MOVS     R0,#+255
          CFI FunCall ReadTW88
        BL       ReadTW88
        MOVS     R5,R0
//   21 	
//   22 	val = ReadTW88_Page(0xb09);	
        MOVW     R0,#+2825
          CFI FunCall ReadTW88_Page
        BL       ReadTW88_Page
        MOVS     R4,R0
//   23 	WriteTW88(0x09,val|0x01);		// SDTR
        ORRS     R1,R4,#0x1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,#+9
          CFI FunCall WriteTW88
        BL       WriteTW88
//   24 
//   25 	WriteTW88(0xFF,page);
        MOVS     R1,R5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,#+255
          CFI FunCall WriteTW88
        BL       WriteTW88
//   26 }
        POP      {R0,R4,R5,PC}    ;; return
          CFI EndBlock cfiBlock0
//   27 
//   28 

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function Pannel_include
          CFI NoCalls
        THUMB
//   29 void Pannel_include(void)
//   30 {
//   31 
//   32 }
Pannel_include:
        BX       LR               ;; return
          CFI EndBlock cfiBlock1
//   33 

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function WritePannelData
        THUMB
//   34 void WritePannelData(BYTE sys)
//   35 {	
WritePannelData:
        PUSH     {R4,LR}
          CFI R14 Frame(CFA, -4)
          CFI R4 Frame(CFA, -8)
          CFI CFA R13+8
        MOVS     R4,R0
//   36 
//   37 			
//   38 			switch(sys)
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,R4
        CMP      R0,#+0
        CMP      R0,#+3
        BLS.N    ??WritePannelData_0
        SUBS     R0,R0,#+40
        BEQ.N    ??WritePannelData_0
        SUBS     R0,R0,#+1
        CMP      R0,#+2
        BLS.N    ??WritePannelData_1
        B.N      ??WritePannelData_2
//   39 			{			
//   40 			               	case	Pannel_init_tw8836:					
//   41 					case	Pannel_Poweron:					
//   42 					case	Pannel_poweroff:					
//   43 					case	Pannel_init_osd:		
//   44 					case Pannel_TW8836_SWRST:
//   45 							WritePannelData_Func(sys);	
??WritePannelData_0:
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
          CFI FunCall WritePannelData_Func
        BL       WritePannelData_Func
//   46 							break;	
        B.N      ??WritePannelData_3
//   47 					//case	Pannel_init_tw8836:					
//   48 		                        case Pannel_ARM_type:
//   49 					case Pannel_CarMedia_type:
//   50 					case Pannel_CVBS_type:
//   51 							WritePannelData_Func(sys);	
??WritePannelData_1:
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
          CFI FunCall WritePannelData_Func
        BL       WritePannelData_Func
//   52 							//Delay_1ms(100);//
//   53 							//BackLight(1);
//   54 							break;	
        B.N      ??WritePannelData_3
//   55 					default:
//   56 							return;							
??WritePannelData_2:
        B.N      ??WritePannelData_4
//   57 			}	
//   58 }
??WritePannelData_3:
??WritePannelData_4:
        POP      {R4,PC}          ;; return
          CFI EndBlock cfiBlock2
//   59 

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function WritePannelData_Func
        THUMB
//   60 void WritePannelData_Func(BYTE sys)
//   61 {	
WritePannelData_Func:
        PUSH     {R3-R7,LR}
          CFI R14 Frame(CFA, -4)
          CFI R7 Frame(CFA, -8)
          CFI R6 Frame(CFA, -12)
          CFI R5 Frame(CFA, -16)
          CFI R4 Frame(CFA, -20)
          CFI CFA R13+24
        MOVS     R4,R0
//   62 		UINT j ;	
//   63 		BYTE index,val;
//   64 
//   65 		if(Sys.show_TFT_p!=sys)
        LDR.W    R0,??DataTable0
        LDRB     R0,[R0, #+24]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R0,R4
        BEQ.N    ??WritePannelData_Func_0
//   66 		{
//   67 		Sys.show_TFT_p=sys;
        LDR.W    R0,??DataTable0
        STRB     R4,[R0, #+24]
//   68 		BackLight(0);
        MOVS     R0,#+0
          CFI FunCall BackLight
        BL       BackLight
//   69 		}
//   70 
//   71 
//   72 		for(j = 0;j<8194;j += 2)
??WritePannelData_Func_0:
        MOVS     R0,#+0
        MOVS     R5,R0
??WritePannelData_Func_1:
        MOVW     R0,#+8194
        CMP      R5,R0
        BCS.W    ??WritePannelData_Func_2
//   73 		{		
//   74 			switch(Sys.lcd_type)
        LDR.W    R0,??DataTable0
        LDRB     R0,[R0, #+12]
        CMP      R0,#+7
        BNE.W    ??WritePannelData_Func_3
//   75 			{
//   76 
//   77 
//   78 				case Panelhannstar09_DT:
//   79 						switch(sys)
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BEQ.W    ??WritePannelData_Func_4
        CMP      R4,#+2
        BEQ.N    ??WritePannelData_Func_5
        BCC.N    ??WritePannelData_Func_6
        CMP      R4,#+4
        BEQ.W    ??WritePannelData_Func_7
        BCC.N    ??WritePannelData_Func_8
        CMP      R4,#+6
        BEQ.W    ??WritePannelData_Func_9
        BCC.W    ??WritePannelData_Func_10
        CMP      R4,#+8
        BEQ.W    ??WritePannelData_Func_11
        BCC.W    ??WritePannelData_Func_12
        CMP      R4,#+10
        BEQ.W    ??WritePannelData_Func_13
        BCC.W    ??WritePannelData_Func_14
        CMP      R4,#+12
        BEQ.W    ??WritePannelData_Func_15
        BCC.W    ??WritePannelData_Func_16
        CMP      R4,#+14
        BEQ.W    ??WritePannelData_Func_17
        BCC.W    ??WritePannelData_Func_18
        CMP      R4,#+16
        BEQ.W    ??WritePannelData_Func_19
        BCC.W    ??WritePannelData_Func_20
        CMP      R4,#+18
        BEQ.W    ??WritePannelData_Func_21
        BCC.W    ??WritePannelData_Func_22
        CMP      R4,#+20
        BEQ.W    ??WritePannelData_Func_23
        BCC.W    ??WritePannelData_Func_24
        CMP      R4,#+22
        BEQ.W    ??WritePannelData_Func_25
        BCC.W    ??WritePannelData_Func_26
        CMP      R4,#+24
        BEQ.W    ??WritePannelData_Func_27
        BCC.W    ??WritePannelData_Func_28
        CMP      R4,#+26
        BEQ.W    ??WritePannelData_Func_29
        BCC.W    ??WritePannelData_Func_30
        CMP      R4,#+28
        BEQ.W    ??WritePannelData_Func_31
        BCC.W    ??WritePannelData_Func_32
        CMP      R4,#+30
        BEQ.W    ??WritePannelData_Func_33
        BCC.W    ??WritePannelData_Func_34
        CMP      R4,#+32
        BEQ.N    ??WritePannelData_Func_35
        BCC.N    ??WritePannelData_Func_36
        CMP      R4,#+34
        BEQ.W    ??WritePannelData_Func_37
        BCC.W    ??WritePannelData_Func_38
        CMP      R4,#+36
        BEQ.W    ??WritePannelData_Func_39
        BCC.W    ??WritePannelData_Func_40
        CMP      R4,#+38
        BEQ.N    ??WritePannelData_Func_41
        BCC.W    ??WritePannelData_Func_42
        CMP      R4,#+40
        BEQ.N    ??WritePannelData_Func_43
        BCC.W    ??WritePannelData_Func_44
        CMP      R4,#+42
        BEQ.W    ??WritePannelData_Func_45
        BCC.W    ??WritePannelData_Func_46
        CMP      R4,#+44
        BEQ.W    ??WritePannelData_Func_47
        BCC.W    ??WritePannelData_Func_48
        B.N      ??WritePannelData_Func_49
//   80 						{				
//   81 								case	Pannel_init_tw8836:					
//   82 										index =tInit_tw8836_9inch[j];
??WritePannelData_Func_6:
        LDR.W    R0,??DataTable0_1
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//   83 										val =tInit_tw8836_9inch[j+1];
        LDR.W    R0,??DataTable0_1
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//   84 										break;
        B.N      ??WritePannelData_Func_50
//   85 								case	Pannel_Poweron:					
//   86 										index =tw8836_Poweron_9inch[j];
??WritePannelData_Func_5:
        LDR.W    R0,??DataTable0_2
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//   87 										val =tw8836_Poweron_9inch[j+1];
        LDR.W    R0,??DataTable0_2
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//   88 										break;
        B.N      ??WritePannelData_Func_50
//   89 								case	Pannel_poweroff:					
//   90 										index =tw8836_poweroff_9inch[j];
??WritePannelData_Func_8:
        LDR.W    R0,??DataTable0_3
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//   91 										val =tw8836_poweroff_9inch[j+1];
        LDR.N    R0,??DataTable0_3
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//   92 										break;	
        B.N      ??WritePannelData_Func_50
//   93 								case	Pannel_TW8836_SWRST:		///20120528	TEST				
//   94 										index =TW8836_SWRST_9inch[j];
??WritePannelData_Func_43:
        LDR.N    R0,??DataTable0_4
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//   95 										val =TW8836_SWRST_9inch[j+1];
        LDR.N    R0,??DataTable0_4
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//   96 										break;								
        B.N      ??WritePannelData_Func_50
//   97 								case	Pannel_init_osd:					
//   98 										index =tInit_osd_9inch[j];
??WritePannelData_Func_4:
        LDR.N    R0,??DataTable0_5
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//   99 										val =tInit_osd_9inch[j+1];
        LDR.N    R0,??DataTable0_5
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  100 										break;			
        B.N      ??WritePannelData_Func_50
//  101 
//  102 								//-----------------SIGNAL------------
//  103 								case	Pannel_NTSC_type:
//  104 										index =tInit_ntsc_9inch[j];
??WritePannelData_Func_7:
        LDR.N    R0,??DataTable0_6
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  105 										val =tInit_ntsc_9inch[j + 1]; 
        LDR.N    R0,??DataTable0_6
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  106 										break;
        B.N      ??WritePannelData_Func_50
//  107 								case	Pannel_PAL_type:					
//  108 										index =tInit_pal_9inch[j];
??WritePannelData_Func_10:
        LDR.N    R0,??DataTable0_7
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  109 										val =tInit_pal_9inch[j + 1]; 
        LDR.N    R0,??DataTable0_7
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  110 										break;
        B.N      ??WritePannelData_Func_50
//  111 								case	Pannel_SECAM_type:				
//  112 										index =tInit_secam_9inch[j];
??WritePannelData_Func_9:
        LDR.N    R0,??DataTable0_8
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  113 										val =tInit_secam_9inch[j + 1]; 
        LDR.N    R0,??DataTable0_8
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  114 										break;		
        B.N      ??WritePannelData_Func_50
//  115 
//  116 								case	Pannel_RGB_dvd_type:				 
//  117 										index =tInit_RGB_forDVD_9inch[j];
??WritePannelData_Func_12:
        LDR.N    R0,??DataTable0_9
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  118 										val =tInit_RGB_forDVD_9inch[j+1];
        LDR.N    R0,??DataTable0_9
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  119 										break;
        B.N      ??WritePannelData_Func_50
//  120 								case	Pannel_DTV_888_type:	
//  121 										index =tInit_DTV_9inch[j];
??WritePannelData_Func_11:
        LDR.N    R0,??DataTable0_10
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  122 										val =tInit_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_10
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  123 										break;	
        B.N      ??WritePannelData_Func_50
//  124 
//  125 								//---------------DVD SET--------------		
//  126 								case	Pannel_DVD_SET_PIP:	
//  127 										index =tInit_DVD_SET_PIP_9inch[j];
??WritePannelData_Func_36:
        LDR.N    R0,??DataTable0_11
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  128 										val =tInit_DVD_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_11
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  129 										break;	
        B.N      ??WritePannelData_Func_50
//  130 								case	Pannel_TV_PAL_SET_PIP:	
//  131 										index =tInit_TV_PAL_SET_PIP_9inch[j];
??WritePannelData_Func_35:
        LDR.N    R0,??DataTable0_12
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  132 										val =tInit_TV_PAL_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_12
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  133 										break;	
        B.N      ??WritePannelData_Func_50
//  134 								case	Pannel_AUX_PAL_SET_PIP:	
//  135 										index =tInit_AUX_PAL_SET_PIP_9inch[j];
??WritePannelData_Func_41:
        LDR.N    R0,??DataTable0_13
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  136 										val =tInit_AUX_PAL_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_13
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  137 										break;	
        B.N      ??WritePannelData_Func_50
//  138 								case	Pannel_Video_PAL_SET_PIP:	
//  139 										index =tInit_Video_PAL_SET_PIP_9inch[j];
??WritePannelData_Func_37:
        LDR.N    R0,??DataTable0_14
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  140 										val =tInit_Video_PAL_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_14
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  141 										break;							
        B.N      ??WritePannelData_Func_50
//  142 								case	Pannel_PARK_PAL_SET_PIP:	
//  143 										index =tInit_PARK_PAL_SET_PIP_9inch[j];
??WritePannelData_Func_39:
        LDR.N    R0,??DataTable0_15
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  144 										val =tInit_PARK_PAL_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_15
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  145 										break;							
        B.N      ??WritePannelData_Func_50
//  146 
//  147 								//------pip  vide  switch----------
//  148 			                                   case	Pannel_2PIP_CVBS_PAL_DTV:
//  149 										index =tInit_2PIP_CVBS_PAL_DTV_9inch[j];
??WritePannelData_Func_16:
        LDR.N    R0,??DataTable0_16
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  150 										val =tInit_2PIP_CVBS_PAL_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_16
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  151 										break;
        B.N      ??WritePannelData_Func_50
//  152 			                                   case	Pannel_2PIP_CVBS_PAL_YUV:
//  153 										index =tInit_2PIP_CVBS_PAL_YUV_9inch[j];
??WritePannelData_Func_15:
        LDR.N    R0,??DataTable0_17
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  154 										val =tInit_2PIP_CVBS_PAL_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_17
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  155 										break;
        B.N      ??WritePannelData_Func_50
//  156 			                                  case	Pannel_2PIP_DTV_YUV:
//  157 										index =tInit_2PIP_DTV_YUV_9inch[j];
??WritePannelData_Func_14:
        LDR.N    R0,??DataTable0_18
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  158 										val =tInit_2PIP_DTV_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_18
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  159 										break;
        B.N      ??WritePannelData_Func_50
//  160 			                                  case	Pannel_2PIP_DTV_CVBS_PAL:
//  161 										index =tInit_2PIP_DTV_CVBS_PAL_9inch[j];
??WritePannelData_Func_18:
        LDR.N    R0,??DataTable0_19
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  162 										val =tInit_2PIP_DTV_CVBS_PAL_9inch[j+1];
        LDR.N    R0,??DataTable0_19
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  163 										break;
        B.N      ??WritePannelData_Func_50
//  164 			                                  case	Pannel_2PIP_YUV_DTV:
//  165 										index =tInit_2PIP_YUV_DTV_9inch[j];
??WritePannelData_Func_13:
        LDR.N    R0,??DataTable0_20
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  166 										val =tInit_2PIP_YUV_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_20
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  167 										break;
        B.N      ??WritePannelData_Func_50
//  168 			                                  case	Pannel_2PIP_YUV_CVBS_PAL:	
//  169 										index =tInit_2PIP_YUV_CVBS_PAL_9inch[j];
??WritePannelData_Func_17:
        LDR.N    R0,??DataTable0_21
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  170 										val =tInit_2PIP_YUV_CVBS_PAL_9inch[j+1];
        LDR.N    R0,??DataTable0_21
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  171 										break;	
        B.N      ??WritePannelData_Func_50
//  172 
//  173 			                                  case	Pannel_3PIP_YUV_CVBS_PAL_DTV:
//  174 			 							index = tInit_3PIP_YUV_CVBS_PAL_DTV_9inch[j];
??WritePannelData_Func_24:
        LDR.N    R0,??DataTable0_22
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  175 										val = tInit_3PIP_YUV_CVBS_PAL_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_22
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  176 										break;	
        B.N      ??WritePannelData_Func_50
//  177 			                                 case	Pannel_3PIP_YUV_DTV_CVBS_PAL:
//  178 			 							index = tInit_3PIP_YUV_DTV_CVBS_PAL_9inch[j];
??WritePannelData_Func_23:
        LDR.N    R0,??DataTable0_23
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  179 										val = tInit_3PIP_YUV_DTV_CVBS_PAL_9inch[j+1];
        LDR.N    R0,??DataTable0_23
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  180 										break;	
        B.N      ??WritePannelData_Func_50
//  181 			                                  case	Pannel_3PIP_DTV_CVBS_PAL_YUV:
//  182 			  							index = tInit_3PIP_DTV_CVBS_PAL_YUV_9inch[j];
??WritePannelData_Func_26:
        LDR.N    R0,??DataTable0_24
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  183 										val = tInit_3PIP_DTV_CVBS_PAL_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_24
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  184 										break;	
        B.N      ??WritePannelData_Func_50
//  185 			                                 case	Pannel_3PIP_DTV_YUV_CVBS_PAL:		
//  186 			  							index = tInit_3PIP_DTV_YUV_CVBS_PAL_9inch[j];
??WritePannelData_Func_25:
        LDR.N    R0,??DataTable0_25
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  187 										val = tInit_3PIP_DTV_YUV_CVBS_PAL_9inch[j+1];
        LDR.N    R0,??DataTable0_25
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  188 										break;	
        B.N      ??WritePannelData_Func_50
//  189 			                                 case	Pannel_3PIP_CVBS_PAL_DTV_YUV:
//  190 			  							index = tInit_3PIP_CVBS_PAL_DTV_YUV_9inch[j];
??WritePannelData_Func_28:
        LDR.N    R0,??DataTable0_26
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  191 										val = tInit_3PIP_CVBS_PAL_DTV_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_26
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  192 										break;	
        B.N      ??WritePannelData_Func_50
//  193 			                                 case	Pannel_3PIP_CVBS_PAL_YUV_DTV:							
//  194 			 							index = tInit_3PIP_CVBS_PAL_YUV_DTV_9inch[j];
??WritePannelData_Func_27:
        LDR.N    R0,??DataTable0_27
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  195 										val = tInit_3PIP_CVBS_PAL_YUV_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_27
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  196 										break;	
        B.N      ??WritePannelData_Func_50
//  197 			///////////////////////////////////////////////////////////////////////////////////////////		
//  198 				
//  199 								case	Pannel_TV_NTSC_SET_PIP:	
//  200 										index =tInit_TV_NTSC_SET_PIP_9inch[j];
??WritePannelData_Func_38:
        LDR.N    R0,??DataTable0_28
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  201 										val =tInit_TV_NTSC_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_28
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  202 										break;	
        B.N      ??WritePannelData_Func_50
//  203 								case	Pannel_AUX_NTSC_SET_PIP:	
//  204 										index =tInit_AUX_NTSC_SET_PIP_9inch[j];
??WritePannelData_Func_44:
        LDR.N    R0,??DataTable0_29
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  205 										val =tInit_AUX_NTSC_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_29
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  206 										break;	
        B.N      ??WritePannelData_Func_50
//  207 								case	Pannel_Video_NTSC_SET_PIP:	
//  208 										index =tInit_Video_NTSC_SET_PIP_9inch[j];
??WritePannelData_Func_40:
        LDR.N    R0,??DataTable0_30
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  209 										val =tInit_Video_NTSC_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_30
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  210 										break;							
        B.N      ??WritePannelData_Func_50
//  211 								case	Pannel_PARK_NTSC_SET_PIP:	
//  212 										index =tInit_PARK_NTSC_SET_PIP_9inch[j];
??WritePannelData_Func_42:
        LDR.N    R0,??DataTable0_31
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  213 										val =tInit_PARK_NTSC_SET_PIP_9inch[j+1];
        LDR.N    R0,??DataTable0_31
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  214 										break;							
        B.N      ??WritePannelData_Func_50
//  215 
//  216 								//------pip  vide  switch----------
//  217 			                                   case	Pannel_2PIP_CVBS_NTSC_DTV:
//  218 										index =tInit_2PIP_CVBS_NTSC_DTV_9inch[j];
??WritePannelData_Func_20:
        LDR.N    R0,??DataTable0_32
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  219 										val =tInit_2PIP_CVBS_NTSC_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_32
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  220 										break;
        B.N      ??WritePannelData_Func_50
//  221 			                                   case	Pannel_2PIP_CVBS_NTSC_YUV:
//  222 										index =tInit_2PIP_CVBS_NTSC_YUV_9inch[j];
??WritePannelData_Func_19:
        LDR.N    R0,??DataTable0_33
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  223 										val =tInit_2PIP_CVBS_NTSC_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_33
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  224 										break;
        B.N      ??WritePannelData_Func_50
//  225 			                                  case	Pannel_2PIP_DTV_CVBS_NTSC:
//  226 										index =tInit_2PIP_DTV_CVBS_NTSC_9inch[j];
??WritePannelData_Func_22:
        LDR.N    R0,??DataTable0_34
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  227 										val =tInit_2PIP_DTV_CVBS_NTSC_9inch[j+1];
        LDR.N    R0,??DataTable0_34
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  228 										break;
        B.N      ??WritePannelData_Func_50
//  229 			                                  case	Pannel_2PIP_YUV_CVBS_NTSC:	
//  230 										index =tInit_2PIP_YUV_CVBS_NTSC_9inch[j];
??WritePannelData_Func_21:
        LDR.N    R0,??DataTable0_35
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  231 										val =tInit_2PIP_YUV_CVBS_NTSC_9inch[j+1];
        LDR.N    R0,??DataTable0_35
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  232 										break;	
        B.N      ??WritePannelData_Func_50
//  233 
//  234 			                                  case	Pannel_3PIP_YUV_CVBS_NTSC_DTV:
//  235 			 							index = tInit_3PIP_YUV_CVBS_NTSC_DTV_9inch[j];
??WritePannelData_Func_30:
        LDR.N    R0,??DataTable0_36
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  236 										val = tInit_3PIP_YUV_CVBS_NTSC_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_36
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  237 										break;	
        B.N      ??WritePannelData_Func_50
//  238 			                                 case	Pannel_3PIP_YUV_DTV_CVBS_NTSC:
//  239 			 							index = tInit_3PIP_YUV_DTV_CVBS_NTSC_9inch[j];
??WritePannelData_Func_29:
        LDR.N    R0,??DataTable0_37
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  240 										val = tInit_3PIP_YUV_DTV_CVBS_NTSC_9inch[j+1];
        LDR.N    R0,??DataTable0_37
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  241 										break;	
        B.N      ??WritePannelData_Func_50
//  242 			                                  case	Pannel_3PIP_DTV_CVBS_NTSC_YUV:
//  243 			  							index = tInit_3PIP_DTV_CVBS_NTSC_YUV_9inch[j];
??WritePannelData_Func_32:
        LDR.N    R0,??DataTable0_38
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  244 										val = tInit_3PIP_DTV_CVBS_NTSC_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_38
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  245 										break;	
        B.N      ??WritePannelData_Func_50
//  246 			                                 case	Pannel_3PIP_DTV_YUV_CVBS_NTSC:		
//  247 			  							index = tInit_3PIP_DTV_YUV_CVBS_NTSC_9inch[j];
??WritePannelData_Func_31:
        LDR.N    R0,??DataTable0_39
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  248 										val = tInit_3PIP_DTV_YUV_CVBS_NTSC_9inch[j+1];
        LDR.N    R0,??DataTable0_39
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  249 										break;	
        B.N      ??WritePannelData_Func_50
//  250 			                                 case	Pannel_3PIP_CVBS_NTSC_DTV_YUV:
//  251 			  							index = tInit_3PIP_CVBS_NTSC_DTV_YUV_9inch[j];
??WritePannelData_Func_34:
        LDR.N    R0,??DataTable0_40
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  252 										val = tInit_3PIP_CVBS_NTSC_DTV_YUV_9inch[j+1];
        LDR.N    R0,??DataTable0_40
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  253 										break;	
        B.N      ??WritePannelData_Func_50
//  254 			                                 case	Pannel_3PIP_CVBS_NTSC_YUV_DTV:							
//  255 			 							index = tInit_3PIP_CVBS_NTSC_YUV_DTV_9inch[j];
??WritePannelData_Func_33:
        LDR.N    R0,??DataTable0_41
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  256 										val = tInit_3PIP_CVBS_NTSC_YUV_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_41
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  257 										break;	
        B.N      ??WritePannelData_Func_50
//  258 							case Pannel_ARM_type:
//  259                                                                                	index = tInit_ARM_9inch[j];
??WritePannelData_Func_46:
        LDR.N    R0,??DataTable0_42
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  260 										val = tInit_ARM_9inch[j+1];
        LDR.N    R0,??DataTable0_42
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  261 								               break;
        B.N      ??WritePannelData_Func_50
//  262                                                         case Pannel_CarMedia_type:
//  263                                                                                 index = tInit_CarMedia_9inch[j];
??WritePannelData_Func_45:
        LDR.N    R0,??DataTable0_43
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  264 										val = tInit_CarMedia_9inch[j+1];
        LDR.N    R0,??DataTable0_43
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  265 								               break;		
        B.N      ??WritePannelData_Func_50
//  266 							case Pannel_CVBS_type:
//  267                                         index = tInit_CVBS_9inch[j];
??WritePannelData_Func_48:
        LDR.N    R0,??DataTable0_44
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  268 										val = tInit_CVBS_9inch[j+1];
        LDR.N    R0,??DataTable0_44
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  269 								               break;
        B.N      ??WritePannelData_Func_50
//  270 							case Pannel_DTV_type:
//  271 								index = tInit_DTV_9inch[j];
??WritePannelData_Func_47:
        LDR.N    R0,??DataTable0_10
        LDRB     R0,[R5, R0]
        MOVS     R6,R0
//  272 								val = tInit_DTV_9inch[j+1];
        LDR.N    R0,??DataTable0_10
        ADDS     R0,R5,R0
        LDRB     R0,[R0, #+1]
        MOVS     R7,R0
//  273 								break;
        B.N      ??WritePannelData_Func_50
//  274 								default:
//  275 										return;							
??WritePannelData_Func_49:
        B.N      ??WritePannelData_Func_51
//  276 						}					
//  277 						break;
??WritePannelData_Func_50:
        B.N      ??WritePannelData_Func_52
//  278 	
//  279 				default:
//  280 						
//  281 											
//  282 						break;
//  283 			}				
//  284 
//  285 
//  286 			if(val == 0xFF && index == 0xFF)
??WritePannelData_Func_3:
??WritePannelData_Func_52:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+255
        BNE.N    ??WritePannelData_Func_53
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+255
        BEQ.N    ??WritePannelData_Func_2
//  287 				break;	
//  288 			
//  289 			WriteTW88(index, val);		
??WritePannelData_Func_53:
        MOVS     R1,R7
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R6
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
          CFI FunCall WriteTW88
        BL       WriteTW88
//  290 
//  291 		}
        ADDS     R5,R5,#+2
        B.N      ??WritePannelData_Func_1
//  292 		
//  293 		//SetAutoDetectStd();//自动制式检测
//  294 
//  295 		
//  296 		WriteTW88(0xff, 0x00);		// set page 0
??WritePannelData_Func_2:
        MOVS     R1,#+0
        MOVS     R0,#+255
          CFI FunCall WriteTW88
        BL       WriteTW88
//  297 		//PannelType_last=sys;
//  298 }
??WritePannelData_Func_51:
        POP      {R0,R4-R7,PC}    ;; return
          CFI EndBlock cfiBlock3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0:
        DC32     EEPROM_DATA

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_1:
        DC32     tInit_tw8836_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_2:
        DC32     tw8836_Poweron_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_3:
        DC32     tw8836_poweroff_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_4:
        DC32     TW8836_SWRST_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_5:
        DC32     tInit_osd_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_6:
        DC32     tInit_ntsc_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_7:
        DC32     tInit_pal_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_8:
        DC32     tInit_secam_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_9:
        DC32     tInit_RGB_forDVD_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_10:
        DC32     tInit_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_11:
        DC32     tInit_DVD_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_12:
        DC32     tInit_TV_PAL_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_13:
        DC32     tInit_AUX_PAL_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_14:
        DC32     tInit_Video_PAL_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_15:
        DC32     tInit_PARK_PAL_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_16:
        DC32     tInit_2PIP_CVBS_PAL_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_17:
        DC32     tInit_2PIP_CVBS_PAL_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_18:
        DC32     tInit_2PIP_DTV_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_19:
        DC32     tInit_2PIP_DTV_CVBS_PAL_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_20:
        DC32     tInit_2PIP_YUV_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_21:
        DC32     tInit_2PIP_YUV_CVBS_PAL_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_22:
        DC32     tInit_3PIP_YUV_CVBS_PAL_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_23:
        DC32     tInit_3PIP_YUV_DTV_CVBS_PAL_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_24:
        DC32     tInit_3PIP_DTV_CVBS_PAL_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_25:
        DC32     tInit_3PIP_DTV_YUV_CVBS_PAL_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_26:
        DC32     tInit_3PIP_CVBS_PAL_DTV_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_27:
        DC32     tInit_3PIP_CVBS_PAL_YUV_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_28:
        DC32     tInit_TV_NTSC_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_29:
        DC32     tInit_AUX_NTSC_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_30:
        DC32     tInit_Video_NTSC_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_31:
        DC32     tInit_PARK_NTSC_SET_PIP_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_32:
        DC32     tInit_2PIP_CVBS_NTSC_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_33:
        DC32     tInit_2PIP_CVBS_NTSC_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_34:
        DC32     tInit_2PIP_DTV_CVBS_NTSC_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_35:
        DC32     tInit_2PIP_YUV_CVBS_NTSC_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_36:
        DC32     tInit_3PIP_YUV_CVBS_NTSC_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_37:
        DC32     tInit_3PIP_YUV_DTV_CVBS_NTSC_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_38:
        DC32     tInit_3PIP_DTV_CVBS_NTSC_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_39:
        DC32     tInit_3PIP_DTV_YUV_CVBS_NTSC_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_40:
        DC32     tInit_3PIP_CVBS_NTSC_DTV_YUV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_41:
        DC32     tInit_3PIP_CVBS_NTSC_YUV_DTV_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_42:
        DC32     tInit_ARM_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_43:
        DC32     tInit_CarMedia_9inch

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable0_44:
        DC32     tInit_CVBS_9inch

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function DownLoadGamma
          CFI NoCalls
        THUMB
//  299 void DownLoadGamma(void)
//  300 {}
DownLoadGamma:
        BX       LR               ;; return
          CFI EndBlock cfiBlock4
//  301 

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function Set_PIP_Zoom
          CFI NoCalls
        THUMB
//  302 void  Set_PIP_Zoom(BYTE type,BYTE zoom)
//  303 {
//  304 }
Set_PIP_Zoom:
        BX       LR               ;; return
          CFI EndBlock cfiBlock5

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function Set_PIP_Position
          CFI NoCalls
        THUMB
//  305 void  Set_PIP_Position(BYTE winno,UINT xpos,UINT ypos)
//  306 {	
//  307 }
Set_PIP_Position:
        BX       LR               ;; return
          CFI EndBlock cfiBlock6

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function Set_PIP_Window
        THUMB
//  308 void  Set_PIP_Window(BYTE winno,BYTE on_off)
//  309 {
Set_PIP_Window:
        PUSH     {R3-R7,LR}
          CFI R14 Frame(CFA, -4)
          CFI R7 Frame(CFA, -8)
          CFI R6 Frame(CFA, -12)
          CFI R5 Frame(CFA, -16)
          CFI R4 Frame(CFA, -20)
          CFI CFA R13+24
        MOVS     R4,R0
        MOVS     R5,R1
//  310 	WORD index = 0x616;
        MOVW     R6,#+1558
//  311 	BYTE dat;
//  312 	
//  313 	if(winno==PIP_WINDOW1)
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??Set_PIP_Window_0
//  314 	{
//  315 		index = 0x616;	
        MOVW     R0,#+1558
        MOVS     R6,R0
        B.N      ??Set_PIP_Window_1
//  316 
//  317 	}
//  318 	else// if(winno==PIP_WINDOW2)
//  319 	{
//  320 		index = 0x646;	
??Set_PIP_Window_0:
        MOVW     R0,#+1606
        MOVS     R6,R0
//  321 	}
//  322 	dat = ReadTW88_Page(index);
??Set_PIP_Window_1:
        MOVS     R0,R6
          CFI FunCall ReadTW88_Page
        BL       ReadTW88_Page
        MOVS     R7,R0
//  323 	if(on_off==PIP_ON) WriteTW88(index, dat | 0x20);
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R5,#+0
        BNE.N    ??Set_PIP_Window_2
        ORRS     R1,R7,#0x20
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R6
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
          CFI FunCall WriteTW88
        BL       WriteTW88
        B.N      ??Set_PIP_Window_3
//  324 	else     WriteTW88(index, dat & 0xdf);	
??Set_PIP_Window_2:
        ANDS     R1,R7,#0xDF
        MOVS     R0,R6
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
          CFI FunCall WriteTW88
        BL       WriteTW88
//  325 }
??Set_PIP_Window_3:
        POP      {R0,R4-R7,PC}    ;; return
          CFI EndBlock cfiBlock7
//  326 

        SECTION `.text`:CODE:NOROOT(1)
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function Clear_all_PIP
        THUMB
//  327 void Clear_all_PIP(void)
//  328 {
Clear_all_PIP:
        PUSH     {R7,LR}
          CFI R14 Frame(CFA, -4)
          CFI CFA R13+8
//  329 	Set_PIP_Window(PIP_WINDOW1,PIP_OFF);
        MOVS     R1,#+1
        MOVS     R0,#+1
          CFI FunCall Set_PIP_Window
        BL       Set_PIP_Window
//  330 	Set_PIP_Window(PIP_WINDOW2,PIP_OFF);
        MOVS     R1,#+1
        MOVS     R0,#+2
          CFI FunCall Set_PIP_Window
        BL       Set_PIP_Window
//  331 }
        POP      {R0,PC}          ;; return
          CFI EndBlock cfiBlock8

        SECTION `.iar_vfe_header`:DATA:REORDER:NOALLOC:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
        DC32 0

        SECTION __DLIB_PERTHREAD:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        SECTION __DLIB_PERTHREAD_init:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        END
//  332 
//  333 
// 
// 7 724 bytes in section .rodata
// 1 418 bytes in section .text
// 
// 1 418 bytes of CODE  memory
// 7 724 bytes of CONST memory
//
//Errors: none
//Warnings: none
